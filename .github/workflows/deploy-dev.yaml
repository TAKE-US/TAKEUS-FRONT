name: CD for dev with Firebase
on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['15']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        id: node-cache
        env:
          cache-name: node-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Setting .env
        run: echo "REACT_APP_GOOGLE_CLIENTID=${{ secrets.REACT_APP_GOOGLE_CLIENTID }}" > .env && echo "API_DOMAIN=${{ secrets.API_DOMAIN }}" > .env && echo "API_DOMAIN=${{ secrets.API_DOMAIN }}\nREACT_APP_GOOGLE_CLIENTID=${{ secrets.REACT_APP_GOOGLE_CLIENTID }}"

      - run: ls -al ./

      - name: Build webpack
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: built-artifact
          path: build/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: built-artifact
          path: build/

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TAKE__US }}'
          channelId: live
          projectId: take--us
